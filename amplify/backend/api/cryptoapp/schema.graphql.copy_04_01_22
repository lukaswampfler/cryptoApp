type Message
  @model
  @key(
    name: "messagesByReceiver"
    fields: ["receiverID", "createdAt"]
    queryField: "messagesByReceiver"
  )
  @key(
    name: "messagesBySent"
    fields: ["sent", "createdAt"]
    queryField: "messagesBySent"
  ) {
  id: ID!
  senderID: ID!
  receiverID: ID!
  sender: User @connection(fields: ["senderID"])
  receiver: User @connection(fields: ["receiverID"])
  text: String!
  sent: String!
  method: EncryptionMethod!
  createdAt: AWSDateTime!
}

type User @model {
  id: ID!
  name: String!
  publicKeyID: ID!
  publicKey: Key @connection(fields: ["publicKeyID"])
}

type Key @model(queries: null) {
  id: ID!
  exponent: String!
  modulus: String!
}

enum EncryptionMethod {
  RSA
  SDES
  CAESAR
  VIGENERE
  PERMUTATION
}

type Subscription {
  onCreateMessageByReceiverID(receiverID: String!): Message
    @aws_subscribe(mutations: ["createMessage"])
}
